apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: parladata
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    nginx.ingress.kubernetes.io/proxy-body-size: 10m
spec:
  tls:
    - hosts:
        - parladata.lb.djnd.si
      secretName: parladata-tls
  rules:
    - host: parladata.lb.djnd.si
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: parladata
                port:
                  number: 8000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: parladata-nginx
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "DELETE, GET, OPTIONS, PATCH, POST, PUT"
    nginx.ingress.kubernetes.io/cors-allow-headers: "accept, accept-encoding, authorization, content-type, dnt, origin, user-agent, x-csrftoken, x-requested-with, sentry-trace"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*" # TODO
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 10m
spec:
  tls:
    - hosts:
        - files.parladata.lb.djnd.si
      secretName: parladata-nginx-tls
  rules:
    - host: files.parladata.lb.djnd.si
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: parladata-nginx
                port:
                  number: 80
