# Generated by Django 3.2.12 on 2024-06-21 08:32

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('email', models.EmailField(max_length=254)),
                ('hash', models.CharField(max_length=255)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('latest_notification_sent_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('keyword', models.CharField(max_length=255)),
                ('matching_method', models.CharField(choices=[('WIDE', 'wide'), ('NARROW', 'narrow')], default='WIDE', max_length=10)),
                ('accepted_at', models.DateTimeField(blank=True, null=True)),
                ('notification_frequency', models.CharField(choices=[('DAILY', 'daily'), ('WEEKLY', 'weekly'), ('MONTHLY', 'monthly')], default='DAILY', max_length=10)),
                ('latest_notification_sent_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='keywords', to='parlanotifications.notificationuser')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
